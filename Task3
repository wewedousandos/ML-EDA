{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "a98d3b7c-3966-47d6-93b6-be981b822136",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: numpy in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (2.2.2)\n",
      "Requirement already satisfied: matplotlib in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (3.10.0)\n",
      "Requirement already satisfied: contourpy>=1.0.1 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from matplotlib) (1.3.1)\n",
      "Requirement already satisfied: cycler>=0.10 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from matplotlib) (0.12.1)\n",
      "Requirement already satisfied: fonttools>=4.22.0 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from matplotlib) (4.55.8)\n",
      "Requirement already satisfied: kiwisolver>=1.3.1 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from matplotlib) (1.4.8)\n",
      "Requirement already satisfied: numpy>=1.23 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from matplotlib) (2.2.2)\n",
      "Requirement already satisfied: packaging>=20.0 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from matplotlib) (24.2)\n",
      "Requirement already satisfied: pillow>=8 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from matplotlib) (11.1.0)\n",
      "Requirement already satisfied: pyparsing>=2.3.1 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from matplotlib) (3.2.1)\n",
      "Requirement already satisfied: python-dateutil>=2.7 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from matplotlib) (2.9.0.post0)\n",
      "Requirement already satisfied: six>=1.5 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from python-dateutil>=2.7->matplotlib) (1.17.0)\n",
      "Requirement already satisfied: pandas in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (2.2.3)\n",
      "Requirement already satisfied: numpy>=1.23.2 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from pandas) (2.2.2)\n",
      "Requirement already satisfied: python-dateutil>=2.8.2 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from pandas) (2.9.0.post0)\n",
      "Requirement already satisfied: pytz>=2020.1 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from pandas) (2025.1)\n",
      "Requirement already satisfied: tzdata>=2022.7 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from pandas) (2025.1)\n",
      "Requirement already satisfied: six>=1.5 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from python-dateutil>=2.8.2->pandas) (1.17.0)\n",
      "Requirement already satisfied: seaborn in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (0.13.2)\n",
      "Requirement already satisfied: numpy!=1.24.0,>=1.20 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from seaborn) (2.2.2)\n",
      "Requirement already satisfied: pandas>=1.2 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from seaborn) (2.2.3)\n",
      "Requirement already satisfied: matplotlib!=3.6.1,>=3.4 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from seaborn) (3.10.0)\n",
      "Requirement already satisfied: contourpy>=1.0.1 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (1.3.1)\n",
      "Requirement already satisfied: cycler>=0.10 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (0.12.1)\n",
      "Requirement already satisfied: fonttools>=4.22.0 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (4.55.8)\n",
      "Requirement already satisfied: kiwisolver>=1.3.1 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (1.4.8)\n",
      "Requirement already satisfied: packaging>=20.0 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (24.2)\n",
      "Requirement already satisfied: pillow>=8 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (11.1.0)\n",
      "Requirement already satisfied: pyparsing>=2.3.1 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (3.2.1)\n",
      "Requirement already satisfied: python-dateutil>=2.7 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (2.9.0.post0)\n",
      "Requirement already satisfied: pytz>=2020.1 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from pandas>=1.2->seaborn) (2025.1)\n",
      "Requirement already satisfied: tzdata>=2022.7 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from pandas>=1.2->seaborn) (2025.1)\n",
      "Requirement already satisfied: six>=1.5 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from python-dateutil>=2.7->matplotlib!=3.6.1,>=3.4->seaborn) (1.17.0)\n"
     ]
    }
   ],
   "source": [
    "!pip install numpy\n",
    "!pip install matplotlib\n",
    "!pip install pandas\n",
    "!pip install seaborn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "d8a4bff5-dc43-4b94-ac57-79f256735833",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import numpy as np\n",
    "import matplotlib as plot\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "73854427-9c24-4716-82a4-cff1d9547e64",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = pd.read_csv(\"GenZ_DatingApp_Data.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "54f5faa2-d4ca-4b9f-96e7-0365d3a2eecf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<bound method NDFrame.head of      User_ID  Age      Gender   Location      Education     Occupation  \\\n",
       "0          1   20  Non-binary  Bangalore  Undergraduate     Freelancer   \n",
       "1          2   24      Female      Delhi  Undergraduate  Part-time Job   \n",
       "2          3   24  Non-binary    Kolkata  Undergraduate         Intern   \n",
       "3          4   22  Non-binary      Delhi       Graduate  Full-time Job   \n",
       "4          5   18        Male      Delhi       Graduate         Intern   \n",
       "..       ...  ...         ...        ...            ...            ...   \n",
       "495      496   23      Female     Mumbai  Undergraduate         Intern   \n",
       "496      497   23        Male     Mumbai   Postgraduate         Intern   \n",
       "497      498   22        Male  Hyderabad       Graduate     Freelancer   \n",
       "498      499   21      Female    Kolkata       Graduate        Student   \n",
       "499      500   22        Male     Mumbai       Graduate  Part-time Job   \n",
       "\n",
       "    Primary_App Secondary_Apps Usage_Frequency Daily_Usage_Time  \\\n",
       "0         Hinge          Hinge         Monthly           1 hour   \n",
       "1         Hinge        OkCupid          Weekly       30 minutes   \n",
       "2           NaN            NaN          Weekly          2 hours   \n",
       "3           NaN        OkCupid           Daily       30 minutes   \n",
       "4       OkCupid        OkCupid          Weekly          2 hours   \n",
       "..          ...            ...             ...              ...   \n",
       "495      Tinder          Hinge          Weekly        1.5 hours   \n",
       "496     OkCupid         Tinder           Daily          2 hours   \n",
       "497         NaN          Hinge         Monthly          2 hours   \n",
       "498      Tinder          Hinge           Daily        1.5 hours   \n",
       "499         NaN          Hinge          Weekly        1.5 hours   \n",
       "\n",
       "      Reason_for_Using  Satisfaction               Challenges  \\\n",
       "0    Finding a Partner             4          Safety Concerns   \n",
       "1        Casual Dating             5             Time-Wasting   \n",
       "2        Casual Dating             4          Safety Concerns   \n",
       "3           Casual Fun             3                      NaN   \n",
       "4           Casual Fun             4          Safety Concerns   \n",
       "..                 ...           ...                      ...   \n",
       "495      Casual Dating             2                      NaN   \n",
       "496         Casual Fun             1             Time-Wasting   \n",
       "497         Casual Fun             2  Lack of Genuine Matches   \n",
       "498      Casual Dating             3  Lack of Genuine Matches   \n",
       "499         Casual Fun             2             Time-Wasting   \n",
       "\n",
       "       Desired_Features Preferred_Communication  \\\n",
       "0           Audio Calls             Video Calls   \n",
       "1           Video Calls                    Text   \n",
       "2     Detailed Profiles                    Text   \n",
       "3    AI Recommendations             Voice Notes   \n",
       "4           Video Calls                    Text   \n",
       "..                  ...                     ...   \n",
       "495         Audio Calls             Voice Notes   \n",
       "496         Video Calls             Video Calls   \n",
       "497         Video Calls             Voice Notes   \n",
       "498   Detailed Profiles                    Text   \n",
       "499  AI Recommendations             Video Calls   \n",
       "\n",
       "                       Partner_Priorities  \n",
       "0       Values > Personality > Appearance  \n",
       "1       Values > Personality > Appearance  \n",
       "2       Values > Personality > Appearance  \n",
       "3        Personality > Interests > Values  \n",
       "4    Appearance > Interests > Personality  \n",
       "..                                    ...  \n",
       "495      Personality > Interests > Values  \n",
       "496     Values > Personality > Appearance  \n",
       "497  Appearance > Interests > Personality  \n",
       "498  Appearance > Interests > Personality  \n",
       "499  Appearance > Interests > Personality  \n",
       "\n",
       "[500 rows x 16 columns]>"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "c435607b-05ad-4ea8-8871-9572ee0236d2",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "file_path = \"GenZ_DatingApp_Data.csv\"\n",
    "data = pd.read_csv('GenZ_DatingApp_Data.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "428a03ba-a268-4aa9-a80c-ab8fafd9921d",
   "metadata": {},
   "outputs": [],
   "source": [
    "data['Gender'] = data['Gender'].astype(str).str.lower().str.strip()\n",
    "data['Primary_App'] = data['Primary_App'].astype(str).str.lower().str.strip()\n",
    "data['Primary_App'] = data['Primary_App'].replace('nan', pd.NA)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "df8bcdd7-a91e-4e32-9fbb-d4fc48319d18",
   "metadata": {},
   "outputs": [],
   "source": [
    "filtered_data = data.dropna(subset=['Primary_App'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "249b674b-eb57-4184-ba81-0f272e8f2b7d",
   "metadata": {},
   "outputs": [],
   "source": [
    "gender_app_counts = filtered_data.groupby(['Gender', 'Primary_App']).size().reset_index(name='Count')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "3808545e-26d1-41f7-8600-4255b5676672",
   "metadata": {},
   "outputs": [],
   "source": [
    "genders = filtered_data['Gender'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "e2295c75-a546-4898-bdd1-a539ba382099",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "for gender in genders:\n",
    "    gender_data = gender_app_counts[gender_app_counts['Gender'] == gender]\n",
    "    plt.figure(figsize=(8, 4))\n",
    "    \n",
    "   \n",
    "    sns.barplot(x='Primary_App', y='Count', hue='Primary_App', data=gender_data, palette='viridis', legend=False)\n",
    "    \n",
    "    plt.title(f'Dating App Preferences for {gender.capitalize()} Users')\n",
    "    plt.xlabel('Primary App')\n",
    "    plt.ylabel('Number of Users')\n",
    "    plt.xticks(rotation=45)\n",
    "    plt.tight_layout()\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "1b8529cd-1160-4ae8-9cd6-79ffedac7ccb",
   "metadata": {},
   "outputs": [],
   "source": [
    "logistic_data = filtered_data[['Gender', 'Age', 'Primary_App']].dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "64d744f3-017b-4a4a-b358-d8905e85ce30",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting scikit-learn\n",
      "  Using cached scikit_learn-1.6.1-cp311-cp311-macosx_12_0_arm64.whl.metadata (31 kB)\n",
      "Requirement already satisfied: numpy>=1.19.5 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from scikit-learn) (2.2.2)\n",
      "Collecting scipy>=1.6.0 (from scikit-learn)\n",
      "  Using cached scipy-1.15.1-cp311-cp311-macosx_14_0_arm64.whl.metadata (61 kB)\n",
      "Collecting joblib>=1.2.0 (from scikit-learn)\n",
      "  Using cached joblib-1.4.2-py3-none-any.whl.metadata (5.4 kB)\n",
      "Collecting threadpoolctl>=3.1.0 (from scikit-learn)\n",
      "  Using cached threadpoolctl-3.5.0-py3-none-any.whl.metadata (13 kB)\n",
      "Using cached scikit_learn-1.6.1-cp311-cp311-macosx_12_0_arm64.whl (11.1 MB)\n",
      "Using cached joblib-1.4.2-py3-none-any.whl (301 kB)\n",
      "Using cached scipy-1.15.1-cp311-cp311-macosx_14_0_arm64.whl (24.8 MB)\n",
      "Using cached threadpoolctl-3.5.0-py3-none-any.whl (18 kB)\n",
      "Installing collected packages: threadpoolctl, scipy, joblib, scikit-learn\n",
      "Successfully installed joblib-1.4.2 scikit-learn-1.6.1 scipy-1.15.1 threadpoolctl-3.5.0\n"
     ]
    }
   ],
   "source": [
    "!pip install scikit-learn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "f97cc2ac-27d7-4bb4-b177-4ee865b3bdc6",
   "metadata": {},
   "outputs": [],
   "source": [
    "import sklearn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "f78af36c-6162-4ad4-8a87-33fb3a9f1cac",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import LabelEncoder"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "33932c01-50a7-4d43-a138-0b9cba34f7b6",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "from sklearn.preprocessing import LabelEncoder\n",
    "\n",
    "le_gender = LabelEncoder()\n",
    "le_app = LabelEncoder()\n",
    "logistic_data['Gender_Encoded'] = le_gender.fit_transform(logistic_data['Gender'])\n",
    "logistic_data['Primary_App_Encoded'] = le_app.fit_transform(logistic_data['Primary_App'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "bbff79b1-62f1-40d5-91aa-9c671872ee6f",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = logistic_data[['Gender_Encoded', 'Age']]\n",
    "y = logistic_data['Primary_App_Encoded']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "ee9ca106-ca94-4651-aaaf-aa9d0e062849",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "9b0b73b7-7753-4652-abd3-59ac9a469c42",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "bdcd9c54-80f8-47e8-8bf2-88b8fd9d3d49",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import LogisticRegression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "b211ea7b-7363-4aaf-a58d-f2b4f47c6109",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "\n",
    "\n",
    "model = LogisticRegression(max_iter=200)\n",
    "model.fit(X_train, y_train)\n",
    "\n",
    "\n",
    "y_pred = model.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "22e0da16-111c-495d-9c38-cea098137dab",
   "metadata": {},
   "outputs": [],
   "source": [
    "model = LogisticRegression(max_iter=200)\n",
    "model.fit(X_train, y_train)\n",
    "y_pred = model.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "73d95972-be8c-49c3-b911-56a4c3980b96",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "      bumble       0.14      0.03      0.05        32\n",
      "       hinge       0.28      0.37      0.31        30\n",
      "     okcupid       0.30      0.54      0.38        39\n",
      "      tinder       0.00      0.00      0.00        17\n",
      "\n",
      "    accuracy                           0.28       118\n",
      "   macro avg       0.18      0.23      0.19       118\n",
      "weighted avg       0.21      0.28      0.22       118\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/anaconda3/envs/ML/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n",
      "/opt/anaconda3/envs/ML/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n",
      "/opt/anaconda3/envs/ML/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n"
     ]
    }
   ],
   "source": [
    "\n",
    "from sklearn.metrics import classification_report\n",
    "\n",
    "\n",
    "classification_report_result = classification_report(y_test, y_pred, target_names=le_app.classes_)\n",
    "print(classification_report_result)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "3013e36c-7a8b-4615-b9ab-ab2cfd43515d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Primary_App\n",
      "okcupid    118\n",
      "hinge      106\n",
      "bumble      93\n",
      "tinder      76\n",
      "Name: count, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(logistic_data['Primary_App'].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "3802e1d2-9a76-4a88-8a0b-89eba113263f",
   "metadata": {},
   "outputs": [
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'imblearn'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[32], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;21;01mimblearn\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mover_sampling\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m SMOTE\n\u001b[1;32m      4\u001b[0m smote \u001b[38;5;241m=\u001b[39m SMOTE(random_state\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m42\u001b[39m)\n\u001b[1;32m      5\u001b[0m X_resampled, y_resampled \u001b[38;5;241m=\u001b[39m smote\u001b[38;5;241m.\u001b[39mfit_resample(X, y)\n",
      "\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'imblearn'"
     ]
    }
   ],
   "source": [
    "from imblearn.over_sampling import SMOTE\n",
    "\n",
    "\n",
    "smote = SMOTE(random_state=42)\n",
    "X_resampled, y_resampled = smote.fit_resample(X, y)\n",
    "\n",
    "\n",
    "model = LogisticRegression(max_iter=200)\n",
    "model.fit(X_resampled, y_resampled)\n",
    "y_pred = model.predict(X_test)\n",
    "\n",
    "\n",
    "classification_report_result = classification_report(y_test, y_pred, target_names=le_app.classes_, zero_division=0)\n",
    "print(classification_report_result)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "eb4d8f97-4d2b-4fd9-a5e7-82e66d81d7eb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting imbalanced-learn\n",
      "  Downloading imbalanced_learn-0.13.0-py3-none-any.whl.metadata (8.8 kB)\n",
      "Requirement already satisfied: numpy<3,>=1.24.3 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from imbalanced-learn) (2.2.2)\n",
      "Requirement already satisfied: scipy<2,>=1.10.1 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from imbalanced-learn) (1.15.1)\n",
      "Requirement already satisfied: scikit-learn<2,>=1.3.2 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from imbalanced-learn) (1.6.1)\n",
      "Collecting sklearn-compat<1,>=0.1 (from imbalanced-learn)\n",
      "  Downloading sklearn_compat-0.1.3-py3-none-any.whl.metadata (18 kB)\n",
      "Requirement already satisfied: joblib<2,>=1.1.1 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from imbalanced-learn) (1.4.2)\n",
      "Requirement already satisfied: threadpoolctl<4,>=2.0.0 in /opt/anaconda3/envs/ML/lib/python3.11/site-packages (from imbalanced-learn) (3.5.0)\n",
      "Downloading imbalanced_learn-0.13.0-py3-none-any.whl (238 kB)\n",
      "Downloading sklearn_compat-0.1.3-py3-none-any.whl (18 kB)\n",
      "Installing collected packages: sklearn-compat, imbalanced-learn\n",
      "Successfully installed imbalanced-learn-0.13.0 sklearn-compat-0.1.3\n"
     ]
    }
   ],
   "source": [
    "!pip install imbalanced-learn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "776514b9-d983-4738-aedb-0392750ddf29",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "      bumble       0.30      0.38      0.33        32\n",
      "       hinge       0.30      0.43      0.35        30\n",
      "     okcupid       0.00      0.00      0.00        39\n",
      "      tinder       0.21      0.41      0.27        17\n",
      "\n",
      "    accuracy                           0.27       118\n",
      "   macro avg       0.20      0.31      0.24       118\n",
      "weighted avg       0.19      0.27      0.22       118\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from imblearn.over_sampling import SMOTE\n",
    "\n",
    "\n",
    "smote = SMOTE(random_state=42)\n",
    "X_resampled, y_resampled = smote.fit_resample(X, y)\n",
    "\n",
    "\n",
    "model = LogisticRegression(max_iter=200)\n",
    "model.fit(X_resampled, y_resampled)\n",
    "y_pred = model.predict(X_test)\n",
    "\n",
    "\n",
    "from sklearn.metrics import classification_report\n",
    "classification_report_result = classification_report(y_test, y_pred, target_names=le_app.classes_, zero_division=0)\n",
    "print(classification_report_result)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "5adec8bd-3c28-400d-956f-3f382fdef0c8",
   "metadata": {},
   "outputs": [],
   "source": [
    "#with all this we can say gender doesn't influence dating app preferences."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "cc32bc25-8ce5-4941-b885-e8dc98dcb7b0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Total users: 500\n",
      "Users using multiple dating apps: 500 (100.00%)\n",
      "Users using only one dating app: 0 (0.00%)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/3n/5_w7plqd0f1_bnxr3l6cpcq80000gn/T/ipykernel_49501/3246699755.py:29: FutureWarning: \n",
      "\n",
      "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
      "\n",
      "  sns.countplot(x='Total_Apps_Used', data=data, palette='viridis')\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "\n",
    "file_path = \"GenZ_DatingApp_Data.csv\"\n",
    "data = pd.read_csv('GenZ_DatingApp_Data.csv')\n",
    "\n",
    "\n",
    "data['Secondary_Apps'] = data['Secondary_Apps'].astype(str).str.lower().str.strip()\n",
    "\n",
    "\n",
    "data['Num_Secondary_Apps'] = data['Secondary_Apps'].apply(lambda x: len(x.split(',')) if x != 'none' else 0)\n",
    "\n",
    "\n",
    "data['Total_Apps_Used'] = data['Num_Secondary_Apps'] + 1  \n",
    "\n",
    "\n",
    "multi_app_users = data[data['Total_Apps_Used'] > 1]\n",
    "single_app_users = data[data['Total_Apps_Used'] == 1]\n",
    "\n",
    "\n",
    "print(f\"Total users: {len(data)}\")\n",
    "print(f\"Users using multiple dating apps: {len(multi_app_users)} ({(len(multi_app_users)/len(data))*100:.2f}%)\")\n",
    "print(f\"Users using only one dating app: {len(single_app_users)} ({(len(single_app_users)/len(data))*100:.2f}%)\")\n",
    "\n",
    "\n",
    "plt.figure(figsize=(8, 5))\n",
    "sns.countplot(x='Total_Apps_Used', data=data, palette='viridis')\n",
    "plt.title('Distribution of Dating App Usage')\n",
    "plt.xlabel('Number of Dating Apps Used')\n",
    "plt.ylabel('Number of Users')\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "3ec7dd07-d2d2-4266-89fb-180fc92b07ff",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAxYAAAHqCAYAAACZcdjsAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAPttJREFUeJzt3QmUFeWdP+6XXQSBgCIxuEWNiruYKO47UdxGnTGOo6hEMwaNgnFh3LegJC4xcZsEwfziEjEuEccFUTEqaCSaKCpqNIqjgHEBxLDf//m+Z27/u5sGaaqb3p7nnEvfW1X33rfqFue8n3qXalUqlUoJAACggNZF3gwAABAECwAAoDDBAgAAKEywAAAAChMsAACAwgQLAACgMMECAAAoTLAAAAAKEywAAIDCBAugybj44otTq1atVsl37bnnnvlR9tRTT+Xvvueee1bJ9x9//PFpgw02SI3ZF198kb7//e+nXr165WNzxhlnpMZk9OjRuVx///vfG7ooAC2CYAE0aKWv/FhttdXSOuusk/r375+uv/76NGfOnDr5ng8//DAHkpdffjk1No25bCviJz/5Sf4dTznllPT//t//S8cee+wyt42QVP6tW7dunbp165a22mqrdPLJJ6fnn3++cDnuv//+1FidffbZeb+POuqohi5KLsepp55a47oIzbE+QjTAyhAsgAZ16aWX5krpTTfdlE477bS8LK58R6Xzr3/9a5Vtzz///PTPf/6z1pX3Sy65pNaV98ceeyw/6tPyyvarX/0qTZ06NTVmTzzxRNppp53SRRddlP7jP/4j9e3bd7nbb7vttvm3/s1vfpOGDx+e9tprr/Tggw/mzxg6dGidB4sIOnG+rL/++qmhlEqldOedd+ZgFftaV4EZoDFq29AFAFq2Aw44IO2www4Vr4cNG5YrrAcddFA65JBD0uuvv546duyY17Vt2zY/6tOXX36ZVl999dS+ffvUkNq1a5cau5kzZ6Y+ffqs8Pbf+MY3cgCp7Kqrrkr//u//nq699tq0ySab5NaPutKmTZv8aEhx9f+DDz7I53S0xt17771p4MCBDVomgPqixQJodPbee+90wQUXpPfeey/99re/Xe4Yi3HjxqVdd901d63p3Llz2nTTTdN//dd/VVTqvv3tb+fnJ5xwQkVXnOi+E2IMxZZbbpkmT56cdt999xwoyu+tPsaibPHixXmbGFfQqVOnHH6mTZtWZZu4Oh1jJKqr/JlfVbaaxljMnTs3nXnmmWnddddNHTp0yPv6s5/9LF8Vr6m7S1zFj/2LbbfYYov0yCOPrHBgGDRoUFp77bVzF7Vtttkm3XbbbUuNN3n33XfTQw89VFH2lRnLEKExWjG6d++errjiiir7Evu28847px49euTtokWk+hiX+N44LlG+cjnKx76mMRZxTCO0PvPMM+k73/lO3r9vfvObuRWlumgx22OPPfJ39+7dO11++eVp1KhRtdrX22+/PYevaJ3Zd9998+vqysfzd7/73VeeW5XP2Tg2UbYNN9ww3Xzzzak+vPXWW+mII47IZYpjFcfhe9/7Xpo1a1bFNnFM4v9sz54987kW+xstkNUtWbIk/x+OLo/xfy2OyWuvvVbj/5fPP/88t1yWz/WNN944h9D4DKDx0mIBNErRjSUqWdEd6aSTTqpxmylTpuRK4tZbb527VEUF5O23307PPvtsXr/55pvn5RdeeGHuy7/bbrvl5VEhK/vkk09yq0lUluJqelSmlycqv1EJPOecc3IF/LrrrssVxujOVG5ZWRErUrbKosIdFc0nn3wyV/qjW9Gjjz6azjrrrPS///u/+Yp/ZVFxjqvjP/zhD9Maa6yRx61EBfH999/PFfVlia5DUXmN4xjhJCqtY8aMyRW/qOydfvrpuewRBoYMGZIrmhF2wlprrZVWRgTCf/mXf0kjR47MFc0IQeHnP/953udjjjkmLViwIN11113pX//1X9PYsWPTgAED8jZRjhhAHiEhjmPYaKONlvt9sW9HHnlkPo7RenDrrbfm/YvgUv7uOKZR8Y3fOlrRoqL/61//Op9jK2r+/Pnp97//fcXxOfroo3OInD59eq6or+y59dlnn6UDDzww/du//Vv+zLvvvju39EQr24knnpjqShzzaGWJ/YhuilHmOC5x/ONc6Nq1a94uQkQct/itokUxunzFeRchYPDgwRWfF8dxxIgR6eCDD86f+5e//CX/nTdv3lKthhHo4rt+8IMfpPXWWy8999xz+f0fffRRPi5AI1UCaACjRo2KS9OlP/3pT8vcpmvXrqXtttuu4vVFF12U31N27bXX5tcff/zxMj8jPj+2ie+rbo899sjrbr755hrXxaPsySefzNt+4xvfKM2ePbti+d13352X//znP69Ytv7665cGDhz4lZ+5vLLF++Nzyu6///687eWXX15luyOPPLLUqlWr0ttvv12xLLZr3759lWV/+ctf8vJf/OIXpeW57rrr8na//e1vK5YtWLCg1K9fv1Lnzp2r7HuUb8CAAcv9vBXdtvxbPvDAAxXLvvzyyyrbRDm23HLL0t57711leadOnWo83uVz7N13361Sjlj29NNPVyybOXNmqUOHDqUzzzyzYtlpp52Wj+tLL71UseyTTz4pde/efanPXJZ77rknb/vWW2/l13HsVltttbyvldXm3Cqfs1dffXXFsvnz55e23XbbUs+ePfMxWp547+DBg2tcN2bMmLw+yhNi3+N1LF+e6r9T6N+/f+mb3/xmxevp06eX2rZtWzrssMOqbHfxxRfn76j8+1122WX5N33zzTerbHvuueeW2rRpU3r//feXWx6g4egKBTRacSV7eYNdo/tTeOCBB1a6i0RcgY6ryCvquOOOyy0AZXHl++tf/3r6n//5n1Sf4vNjvMCPfvSjKsvjanjUFx9++OEqy+NKd+Ur99Gq06VLl/TOO+985ffElem4El55vEd8b0wvO2HChFRfv3Wo/HtXv0of3W+iZefPf/5zoe+KrjrlFqJyS0t0K6t8bKLbWL9+/XLLUFl014rWkxUV3Z5i/FB04wlx3kRLS03doWpzbkWrQFzJL4uWingdrRzRRaqulFskomUsWhGWpfLvFL/RP/7xj9ziEMez3GVq/PjxadGiRbklo7LyhA2VRQtZ/D5f+9rX8meVH3FOR1fEp59+us72EahbggXQaEVFtnJFq7qYvnOXXXbJXWGiC1N0Z4puIbUJGTGguDYDtWOAcWXRdSUqjvV9r4QYbxJ906sfj+iWVF5fWXQfqS4qalFB/6rviX2MKWFX5Hvq8rcOlfcvutzEjFHRtz8q9REAottN5f79K2NFjk3sZzkQVFbTsppEV6EIBFHBjq5X5Uecry+++GJ68803V/rcivMgumZV9q1vfSv/rYvzsDyOKbrBxWxd0QVszTXXzN2WbrjhhqWOf3Q9jEp/lCnCfvxO5bFK5W3L50314xe/axz76uM6ItjF51R+xHeECFBA42SMBdAoxUw6USlZXkUurpTG1csYdxCDiKMyEgNgYyBpjM1YkRmBajMuYkUt6yZ+cbV1Vc1StKzvqT7Qu7F49dVX89/y7/3HP/4x99mPQfU33nhjvnIfLScxUPiOO+5o9McmrrrH2ISrr746P6qLVouYanhVixa6ZU3ZXG6ViCBXFmWP8SfRKhj/p6LlKqYKnjRpUh5f87e//S3ts88+abPNNkvXXHNNHmwdQT1CVYz7WZmWxHjPfvvtl+//UZNyiAIaH8ECaJRiUG6Iq6TLE1fWo2ITj6jYxD0NzjvvvBw24gpnXd+pO66mVq+MxpXo6GpUFldg44p1dXHVNmYgKqtN2eJeDI8//njuKlT5qv4bb7xRsb4uxOfEbEhRuavcalHX31O9teK+++7LldJyy0gMeo4KbnTDqTxgOoJFdfVxN/bYz/hdq6tpWU0iOMTsTXGPj+puueWWHI6qB4sVObfK9z+JmbAqt1qUW0C+6m7tsV/Luj9KeXn13zjuKROPuI9MDKKOVpeYhSpmyYqB2hGg/vCHP1RpCYr/f9W/N8T+REtI5ckTqreiRRe+OCfKLRRA06ErFNDoxJz/l112Wa6ALK9P+6effrrUsnKf+KjshHLlq6aK/sqIaUkrjwOI6U9jppqYWapyxSiu6MasOpW79VSfOrQ2ZYtZgKLF45e//GWV5XFVOCrWlb+/iPiemLUoWn7Kom/8L37xizwOIrr21KW4eh4zgMVvGYGwHBKiVSGexz6XRTefmm6EF8exrn7fsgi0EydOrHLzwijjssZHVBa/c7SkxaxNMU6i+iPG9EQFu/odx1fk3Cr/HhFOyuI8i9fRXeirblIYv2+cm9XHYsTxi32L/z/lGatmz56dv6uyCBgROMv/v8qtP5Vbe6KlsXoAjOAfY0OqT0Nb/XwOcdzi2EeorC7KWb1MQOOhxQJoUDHoOK6GR2VhxowZOVTEvSniCmdcBa3cLaO6mK41KnAxIDa2j77X0W0mumjEvS3Klfzo9x1XWONKf1RCd9xxxypXTWsj+oTHZ0flMMobU19G953KU+LGmI+oFH73u9/NlaToLhL346g+DWptyhZTdMb0p1H5jgp23FsiuqZEF5WY7/+rplhdUTFla1RSo/tLVD7jCnjsS/Sjj31d3piXrxLTh5bvSxJXpGNq2egyFEEmBqFXHpAcv2m0QMUxjBvoxW8b/fvjWFe/I3tUpqM1J7aP8Qdx/OI4FhHdcKKs0SUnBhiXp5uNq/IRMJbXShKtEeXpgZdVuY9KdlTkK5dzRc6tEPsY93SI8yC6BUUIjAD03//93195Y8Vzzz03H/PoYhbHO7owRQtI3PMjQkzlQBD/F2PK4ZjiN74n/o9GS2KEiZi6OOy///6561Ocn/F58bvGXePjnhbxeWUxBiqmKo6uVXFc4neN6Wbj/3+M36h8PGMK5fi/H1NJl6cBjhaaV155JZ+Lsd/xHqARasAZqYAWrDwVaPkR06P26tWrtN9+++XpNStPu7ms6WbHjx9fOvTQQ0vrrLNOfn/8Pfroo5eapjKmMO3Tp0+e7rLy9K4xdecWW2xRY/mWNd3snXfeWRo2bFie2rNjx455CtX33ntvqffHdKAxfWhMY7rLLruUXnzxxaU+c3llqz7dbJgzZ05pyJAheT/btWtX2mSTTUo//elPS0uWLFmhKUWXNQ1udTNmzCidcMIJpTXXXDMf16222qrGKXFrO91s+beOaVy7dOmSj/1JJ51Uev7552t8z8iRI/M+xjHcbLPNchmqnwPhjTfeKO2+++7596g8demypputqcw1/TYx3epuu+2Wv793796l4cOHl66//vr8mTF96rLE8VpvvfWWezz23HPPfA4tXLiwVudW+ZyN8ymmAI7pa2OffvnLX5ZW1AcffFD6/ve/n8/POO9iCt2DDjqoNGnSpCrbvfPOO6UTTzyxtNFGG+Xvie322muv0uOPP15luz/84Q+lrbfeOm+zwQYblK666qrSrbfeutSxX7RoUemCCy7I/89j/2La4Ndff73Uo0eP0n/+538uda7Hsdh4443zORjn4s4771z62c9+9pVT6gINp1X809DhBgCagmgdihaduDJfVwPx487b0RoVLQnRVWp54uaFMfVqebB7Uxddm2JMUozXiNY4oGkzxgIAalB99qQYaBxdgaK70qqa3as5qWk2qvJdtCMwAU2fMRYAUIO4QV5UeGOmqhjzMHLkyDyg+YILLmjoojVJMRYkxnLEGJOYCOCZZ55Jd955Zx6nETNNAU2fYAEANYgKcAwWjkHRMbh4++23z+EiBj5TezFtbgxaHzFiRA5o5QHd0Q0KaB6MsQAAAAozxgIAAChMsAAAAAozxiKltGTJknyDoLjx0/JuegQAAC1JqVRKc+bMyTfnbN16+W0SgkVKOVSsu+66DV0MAABolKZNm5Z69+693G0Ei5RyS0X5gHXp0qWhiwMAAI1CzOIWF+DL9eXlESxiaqz/6/4UoUKwAACAqlZkuIDB2wAAQGGCBQAAUJhgAQAAFCZYAAAAhQkWAABAYYIFAABQmGABAAAUJlgAAACFCRYAAEBhggUAAFCYYAEAABQmWAAAAE07WFx88cWpVatWVR6bbbZZxfp58+alwYMHpx49eqTOnTunI444Is2YMaPKZ7z//vtpwIABafXVV089e/ZMZ511Vlq0aFED7A0AALRcbRu6AFtssUV6/PHHK163bfv/F2nIkCHpoYceSmPGjEldu3ZNp556ajr88MPTs88+m9cvXrw4h4pevXql5557Ln300UfpuOOOS+3atUs/+clPGmR/AACgJWrwYBFBIoJBdbNmzUojR45Md9xxR9p7773zslGjRqXNN988TZo0Ke20007pscceS6+99loOJmuvvXbadttt02WXXZbOOeec3BrSvn37BtgjAABoeRp8jMVbb72V1llnnfTNb34zHXPMMblrU5g8eXJauHBh2nfffSu2jW5S6623Xpo4cWJ+HX+32mqrHCrK+vfvn2bPnp2mTJnSAHsDAAAtU4O2WOy4445p9OjRadNNN83dmC655JK02267pVdffTVNnz49tzh069atynsiRMS6EH8rh4ry+vK6ZZk/f35+lEUQAQAAmmiwOOCAAyqeb7311jlorL/++unuu+9OHTt2rLfvHT58eA4xrJg91hjQ0EUAAKhXE+Y81NBFaPIavCtUZdE68a1vfSu9/fbbedzFggUL0ueff15lm5gVqjwmI/5WnyWq/LqmcRtlw4YNy2M4yo9p06bVy/4AAEBL0aiCxRdffJH+9re/pa9//eupb9++eXan8ePHV6yfOnVqHoPRr1+//Dr+vvLKK2nmzJkV24wbNy516dIl9enTZ5nf06FDh7xN5QcAANBEu0L9+Mc/TgcffHDu/vThhx+miy66KLVp0yYdffTReXrZQYMGpaFDh6bu3bvnyv9pp52Ww0TMCBX233//HCCOPfbYNGLEiDyu4vzzz8/3vojwAAAAtIBg8cEHH+QQ8cknn6S11lor7brrrnkq2Xgerr322tS6det8Y7wYbB0zPt14440V748QMnbs2HTKKafkwNGpU6c0cODAdOmllzbgXgEAQMvTqlQqlVILF7NCRQtJjLfQLWppBm8DAM2dwdvF68mNaowFAADQNAkWAABAYYIFAABQmGABAAAUJlgAAACFCRYAAEBhggUAAFCYYAEA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XZcPAABojsHiN7/5Tfrv//7vdMwxx6Q2bdpULN9mm23SG2+8UdflAwAAmmOw+N///d+08cYb1zioe+HChXVVLgAAoDkHiz59+qQ//vGPSy2/55570nbbbVdX5QIAAJqQWk83e+GFF6aBAwfmlotopbj33nvT1KlTcxepsWPH1k8pAQCA5tViceihh6YHH3wwPf744/mu2xE0Xn/99bxsv/32q59SAgAAzavFIuy2225p3LhxdV8aAACgZbRYTJs2LX3wwQcVr1944YV0xhln5JmiAACAlqnWweLf//3f05NPPpmfT58+Pe277745XJx33nnp0ksvrY8yAgAAzS1YvPrqq+k73/lOfn733XenrbbaKj333HPp9ttvzzfOq42bbropbb311qlLly750a9fv/Twww9XrJ83b14aPHhw6tGjR77L9xFHHJFmzJhR5TPef//9NGDAgLT66qunnj17prPOOistWrSotrsFAACsymAR96ro0KFDfh4DuA855JD8fLPNNksfffRRrT6rd+/e6corr0yTJ09OL774Ytp7773z4PApU6bk9UOGDMmDwseMGZMmTJiQPvzww3T44YdXvH/x4sU5VCxYsCCHm9tuuy2HmxhQDgAArDqtSqVSqTZv2HHHHdNee+2VK/T7779/mjRpUr7rdvw98sgjq4y/WBndu3dPP/3pT/NnrbXWWumOO+7Iz0Pc2XvzzTdPEydOTDvttFNu3TjooINy4Fh77bXzNjfffHM655xz0scff5zat2+/Qt85e/bs1LVr1zRr1qzcckJVe6wxoKGLAABQrybMeaihi9Ao1aaeXOsWi6uuuirdcsstac8990xHH310DhXhD3/4Q0UXqZURrQ933XVXmjt3bu4SFa0Y0ToSYzjKolVkvfXWy8EixN/oilUOFaF///75AJRbPQAAgEY43WwEin/84x+58v61r32tYvnJJ5+cxznU1iuvvJKDRIyniHEU9913X76798svv5xbHLp161Zl+wgRMWg8xN/KoaK8vrxuWebPn58fZbEvAADAKr6PRZs2baqEirDBBhusVAE23XTTHCKieeWee+7Jd/WO8RT1afjw4emSSy6p1+8AAICWZIW7QkWQiPEP1R8bbrhh7n60sjfMi1aJjTfeOPXt2zdX+KNr1c9//vPUq1evPCj7888/r7J9zAoV60L8rT5LVPl1eZuaDBs2LAeZ8iPuzQEAAKyCFovrrruuxuVR8Y/xEDGIOlocDj744ALFSWnJkiW5m1IEjXbt2qXx48fnaWbD1KlT8/Sy0XUqxN8rrrgizZw5M081GyLgxMCS6E61LDGrVXlmKwAAYBUGi+iitDzbbrttbnGoTbCIloMDDjggD8ieM2dOngHqqaeeSo8++mgefT5o0KA0dOjQ3DISYeG0007LYSJmhAoxK1UEiGOPPTaNGDEij6s4//zz870vBAcAAGjkYyxqEi0Wl19+ea3eEy0Nxx13XL7/RQSJuFlehIr99tsvr7/22mtT69atc4tFtGJEl6sbb7yxyliPsWPHplNOOSUHjk6dOuUA5A7gAADQyO9jsbzZnSIQLG82psbKfSyWz30sAIDmzn0sGuA+FssycuTI3B0KAABoeVa4K1SMdahJpJc///nP6c0330xPP/10XZYNAABobsHipZdeqnF5NIlEF6h77703Tz0LAAC0PCscLJ588sn6LQkAANBk1dkYCwAAoOUSLAAAgMIECwAAoDDBAgAAWDXBYvvtt0+fffZZfh53tf7yyy+LfzMAANCygsXrr7+e5s6dm59fcskl6YsvvqjvcgEAAM1tutm4o/YJJ5yQdt1111QqldLPfvaz1Llz5xq3vfDCC+u6jAAAQHMIFqNHj04XXXRRGjt2bGrVqlV6+OGHU9u2S7811gkWAADQ8qxQsNh0003TXXfdlZ+3bt06jR8/PvXs2bO+ywYAADS3O2+XLVmypH5KAgAAtJxgEf72t7+l6667Lg/qDn369Emnn3562mijjeq6fAAAQHO8j8Wjjz6ag8QLL7yQtt566/x4/vnn0xZbbJHGjRtXP6UEAAAatVq3WJx77rlpyJAh6corr1xq+TnnnJP222+/uiwfAADQHFssovvToEGDllp+4oknptdee62uygUAADTnYLHWWmull19+eanlscxMUQAA0DLVuivUSSedlE4++eT0zjvvpJ133jkve/bZZ9NVV12Vhg4dWh9lBAAAmluwuOCCC9Iaa6yRrr766jRs2LC8bJ111kkXX3xx+tGPflQfZQQAABq5VqVSqbSyb54zZ07+G0GjKZs9e3bq2rVrmjVrVurSpUtDF6fR2WONAQ1dBACAejVhzkMNXYQmX09eqftYlDX1QAEAADTQ4G0AAIDqBAsAAKAwwQIAAFi1wWLhwoVpn332SW+99VbxbwYAAFpmsGjXrl3661//Wn+lAQAAWkZXqP/4j/9II0eOrJ/SAAAATVKtp5tdtGhRuvXWW9Pjjz+e+vbtmzp16lRl/TXXXFOX5QMAAJpjsHj11VfT9ttvn5+/+eabVda1atWq7koGAAA032Dx5JNP1k9JAACAljfd7Ntvv50effTR9M9//jO/LpVKdVkuAACgOQeLTz75JE85+61vfSsdeOCB6aOPPsrLBw0alM4888z6KCMAANDcgsWQIUPytLPvv/9+Wn311SuWH3XUUemRRx6p6/IBAADNcYzFY489lrtA9e7du8ryTTbZJL333nt1WTYAAKC5tljMnTu3SktF2aeffpo6dOhQV+UCAACac7DYbbfd0m9+85sqU8wuWbIkjRgxIu211151XT4AAKA5doWKABGDt1988cW0YMGCdPbZZ6cpU6bkFotnn322fkoJAAA0rxaLLbfcMt8Yb9ddd02HHnpo7hp1+OGHp5deeilttNFG9VNKAACgebVYhK5du6bzzjuv7ksDAAC0nGDx2WefpZEjR6bXX389v+7Tp0864YQTUvfu3eu6fAAAQHPsCvX000+nDTbYIF1//fU5YMQjnm+44YZ5HQAA0PLUusVi8ODB+WZ4N910U2rTpk1etnjx4vTDH/4wr3vllVfqo5wAAEBzarF4++2305lnnlkRKkI8Hzp0aF4HAAC0PLUOFttvv33F2IrKYtk222xTV+UCAACaW1eov/71rxXPf/SjH6XTTz89t07stNNOedmkSZPSDTfckK688sr6KykAANBotSqVSqWv2qh169b5DttftWlsE+MtmprZs2fnKXRnzZqVunTp0tDFaXT2WGNAQxcBAKBeTZjzUEMXocnXk1eoxeLdd9+tq7IBAADN0AoFi/XXX7/+SwIAALSsG+R9+OGH6ZlnnkkzZ85MS5YsqbIuxmAAAAAtS62DxejRo9MPfvCD1L59+9SjR488rqIsngsWAADQ8tQ6WFxwwQXpwgsvTMOGDcuDugEAAGqdDL788sv0ve99T6gAAAAq1DodDBo0KI0ZM6a2bwMAAJqxWneFGj58eDrooIPSI488krbaaqvUrl27KuuvueaauiwfAADQXIPFo48+mjbddNP8uvrgbQAAoOWpdbC4+uqr06233pqOP/74+ikRAADQ/MdYdOjQIe2yyy71UxoAAKBlBIvTTz89/eIXv6if0gAAAC2jK9QLL7yQnnjiiTR27Ni0xRZbLDV4+957763L8gEAAM0xWHTr1i0dfvjh9VMaAACgZQSLUaNG1U9JAACAJsvtswEAgFXfYrHhhhsu934V77zzTtEyAQAAzT1YnHHGGVVeL1y4ML300kv5TtxnnXVWXZYNAABorsEipputyQ033JBefPHFWt/FO2aReuONN1LHjh3TzjvvnK666qqKu3qHefPmpTPPPDPdddddaf78+al///7pxhtvTGuvvXbFNu+//3465ZRT0pNPPpk6d+6cBg4cmD+7bdta7x4AANCQYywOOOCA9Pvf/75W75kwYUIaPHhwmjRpUho3blxu/dh///3T3LlzK7YZMmRIevDBB9OYMWPy9h9++GGVWakWL16cBgwYkBYsWJCee+65dNttt6XRo0enCy+8sK52DQAA+AqtSqVSKdWBESNG5JaEv//97yv9GR9//HHq2bNnDhC77757mjVrVlprrbXSHXfckY488si8TbRubL755mnixIlpp512Sg8//HA66KCDcuAot2LcfPPN6Zxzzsmf1759+6/83tmzZ6euXbvm7+vSpctKl7+52mONAQ1dBACAejVhzkMNXYRGqTb15Fr3Fdpuu+2qDN6OXDJ9+vRciY9gUUQUOHTv3j3/nTx5cm7F2HfffSu22WyzzdJ6661XESzi71ZbbVWla1R0l4quUVOmTMnlBQAA6letg8Vhhx1W5XXr1q1zq8Kee+6ZK/0ra8mSJXlg+C677JK23HLLvCwCS7Q4xE35KosQEevK21QOFeX15XU1ibEa8aicxAAAgFUYLC666KJUH2KsxauvvpqeeeaZVN9iYPcll1xS798DAAAtRaO4Qd6pp56axo4dm2d16t27d8XyXr165UHZn3/+eZXtZ8yYkdeVt4nX1deX19Vk2LBhudtV+TFt2rR62CsAAGg5VjhYRJenNm3aLPdR2+ldY3xGhIr77rsvPfHEE/nme5X17ds3tWvXLo0fP75i2dSpU/P0sv369cuv4+8rr7ySZs6cWbFNzDAVg0v69OlT4/d26NAhr6/8AAAAVt4KJ4Go/C9LDKC+/vrr8ziJ2nZ/ihmfHnjggbTGGmtUjImIkedxX4v4O2jQoDR06NA8oDsCwGmnnZbDRAzcDjE9bQSIY489Ns9MFZ9x/vnn58+OAAEAADTy6Waj9eDcc8/N95k45phj0qWXXprWX3/9Ff/ySrNLVTZq1Kh0/PHHV7lB3p133lnlBnmVuzm99957eRaop556KnXq1CnfIO/KK69c4RYU080un+lmAYDmznSzxevJKxUs4p4RMYg7bkYXFf0YDF2eyakpEiyWT7AAAJo7waJ4PblWg7fjA+PGcxtvvHG+R0SMfYjWiqYcKgAAgFU4xiLGL1x11VW5C1J0Szr00EPr4OsBAIDmYIW7QsWsUDGgOu6CHTNALcu9996bmhpdoZZPVygAoLnTFap4PXmFWyyOO+64ZQ62BgAAWrYVDhajR4+u35IAAABNVqO48zYAANC0CRYAAEBhggUAAFCYYAEAABQmWAAAAIUJFgAAQGGCBQAAUJhgAQAAFCZYAAAAhQkWAABAYYIFAABQmGABAAAUJlgAAACFCRYAAEBhggUAAFCYYAEAABQmWAAAAIUJFgAAQGGCBQAAUJhgAQAAFCZYAAAAhQkWAABAYYIFAABQmGABAAAUJlgAAACFCRYAAEBhggUAAFCYYAEAABQmWAAAAIUJFgAAQGGCBQAAUJhgAQAAFCZYAAAAhQkWAABAYYIFAABQmGABAAAUJlgAAACFCRYAAEBhggUAAFCYYAEAABQmWAAAAIUJFgAAQGGCBQAAUJhgAQAAFCZYAAAAhQkWAABAYYIFAABQmGABAAAUJlgAAACFCRYAAEBhggUAAFCYYAEAABQmWAAAAIUJFgAAQGGCBQAAUJhgAQAAFCZYAAAAhQkWAABAYYIFAABQmGABAAAUJlgAAABNO1g8/fTT6eCDD07rrLNOatWqVbr//vurrC+VSunCCy9MX//611PHjh3Tvvvum956660q23z66afpmGOOSV26dEndunVLgwYNSl988cUq3hMAAGjZGjRYzJ07N22zzTbphhtuqHH9iBEj0vXXX59uvvnm9Pzzz6dOnTql/v37p3nz5lVsE6FiypQpady4cWns2LE5rJx88smrcC8AAIBWpWgWaASixeK+++5Lhx12WH4dxYqWjDPPPDP9+Mc/zstmzZqV1l577TR69Oj0ve99L73++uupT58+6U9/+lPaYYcd8jaPPPJIOvDAA9MHH3yQ378iZs+enbp27Zo/P1o+qGqPNQY0dBEAAOrVhDkPNXQRGqXa1JMb7RiLd999N02fPj13fyqLndpxxx3TxIkT8+v4G92fyqEixPatW7fOLRwAAMCq0TY1UhEqQrRQVBavy+vib8+ePausb9u2berevXvFNjWZP39+flROYgAAwMprtC0W9Wn48OG59aP8WHfddRu6SAAA0KQ12mDRq1ev/HfGjBlVlsfr8rr4O3PmzCrrFy1alGeKKm9Tk2HDhuV+YuXHtGnT6mUfAACgpWi0wWLDDTfM4WD8+PFVuizF2Il+/frl1/H3888/T5MnT67Y5oknnkhLlizJYzGWpUOHDnnwSeUHAADQRMdYxP0m3n777SoDtl9++eU8RmK99dZLZ5xxRrr88svTJptskoPGBRdckGd6Ks8ctfnmm6fvfve76aSTTspT0i5cuDCdeuqpecaoFZ0RCgAAaOLB4sUXX0x77bVXxeuhQ4fmvwMHDsxTyp599tn5XhdxX4pomdh1113zdLKrrbZaxXtuv/32HCb22WefPBvUEUccke99AQAAtMD7WDQk97FYPvexAACaO/exaMb3sQAAAJoOwQIAAChMsAAAAAoTLAAAgMIECwAAoDDBAgAAKEywAAAAChMsAACAwgQLAACgMMECAAAoTLAAAAAKEywAAIDCBAsAAKAwwQIAAChMsAAAAAoTLAAAgMIECwAAoDDBAgAAKEywAAAAChMsAACAwgQLAACgMMECAAAoTLAAAAAKEywAAIDCBAsAAKAwwQIAAChMsAAAAAoTLAAAgMIECwAAoDDBAgAAKEywAAAAChMsAACAwgQLAACgMMECAAAoTLAAAAAKEywAAIDCBAsAAKAwwQIAAChMsAAAAAoTLAAAgMIECwAAoDDBAgAAKEywAAAAChMsAACAwgQLAACgMMECAAAoTLAAAAAKEywAAIDCBAsAAKAwwQIAAChMsAAAAAoTLAAAgMIECwAAoDDBAgAAKEywAAAAChMsAACAwgQLAACgMMECAAAoTLAAAAAKEywAAIDCBAsAAKAwwQIAAChMsAAAAAoTLAAAgMIECwAAoDDBAgAAKKzZBIsbbrghbbDBBmm11VZLO+64Y3rhhRcaukgAANBiNItg8bvf/S4NHTo0XXTRRenPf/5z2mabbVL//v3TzJkzG7poAADQIjSLYHHNNdekk046KZ1wwgmpT58+6eabb06rr756uvXWWxu6aAAA0CI0+WCxYMGCNHny5LTvvvtWLGvdunV+PXHixAYtGwAAtBRtUxP3j3/8Iy1evDitvfbaVZbH6zfeeKPG98yfPz8/ymbNmpX/zp49u55L2zQtKi1s6CIAANQr9cDlH5dSqZSafbBYGcOHD0+XXHLJUsvXXXfdBikPAAANq2vXrg1dhEZtzpw5X3mMmnywWHPNNVObNm3SjBkzqiyP17169arxPcOGDcuDvcuWLFmSPv3009SjR4/UqlWrei8zAMu/OhYXeqZNm5a6dOnS0MUBaNFKpVIOFeuss85Xbtvkg0X79u1T37590/jx49Nhhx1WERTi9amnnlrjezp06JAflXXr1m2VlBeAFROhQrAAaDqtOU0+WIRofRg4cGDaYYcd0ne+85103XXXpblz5+ZZogAAgPrXLILFUUcdlT7++ON04YUXpunTp6dtt902PfLII0sN6AYAAOpHq9KKDPEGgFUkZu2LSTZiPFz1bqsANF6CBQAAUFiTv0EeAADQ8AQLAACgMMECAAAoTLAAoMHFYO1vf/vbaY011kg9e/bM9yWaOnVqQxcLgFoQLABocBMmTEiDBw9OkyZNSuPGjUsLFy5M+++/f74nEQBNg1mhAGh04t5E0XIRgWP33Xdv6OIAsAK0WADQ6MyaNSv/7d69e0MXBYAVpMUCgEZlyZIl6ZBDDkmff/55euaZZxq6OACsoLYruiEArAox1uLVV18VKgCaGMECgEbj1FNPTWPHjk1PP/106t27d0MXB4BaECwAaHDRK/e0005L9913X3rqqafShhtu2NBFAqCWBAsAGkX3pzvuuCM98MAD+V4W06dPz8u7du2aOnbs2NDFA2AFGLwNQINr1apVjctHjRqVjj/++FVeHgBqT4sFAA3ONS6Aps99LAAAgMIECwAAoDDBAgAAKEywAAAAChMsAACAwgQLAACgMMECAAAoTLAAAAAKEywAGoG///3v+e7TL7/8cmos3njjjbTTTjul1VZbLW277bYNVo4NNtggXXfddQ32/S3ZxRdf3KC/PdC0CBYAKaXjjz8+V+yvvPLKKsvvv//+vLwluuiii1KnTp3S1KlT0/jx45d73OLRrl27tPbaa6f99tsv3XrrrWnJkiW1+r7Ro0enbt26LbX8T3/6Uzr55JPTqjJ8+PDUpk2b9NOf/jQ1Bk899VQ+vp9//vlS64QuoDERLAD+T1yZv+qqq9Jnn32WmosFCxas9Hv/9re/pV133TWtv/76qUePHsvc7rvf/W766KOPcqvLww8/nPbaa690+umnp4MOOigtWrQoFbXWWmul1VdfPa0qEYrOPvvs/BeAFSdYAPyffffdN/Xq1Stfsa5N15C4YhxXjitfxT/ssMPST37yk3wFP67CX3rppbmSfdZZZ6Xu3bun3r17p1GjRtXY/WjnnXfOIWfLLbdMEyZMqLL+1VdfTQcccEDq3Llz/uxjjz02/eMf/6hYv+eee6ZTTz01nXHGGWnNNddM/fv3r3E/ojUhyhTl6NChQ96nRx55pGJ9XCGfPHly3iaex34vS7w/jts3vvGNtP3226f/+q//Sg888EAOGdEKUXbNNdekrbbaKreCrLvuuumHP/xh+uKLLyquyp9wwglp1qxZFS0g5e+sflU+1v36179O//Iv/5IDxyabbJL+8Ic/VClTvI7lcRwj6Nx2223LvOpfWRzvf/7zn3m/Z8+enZ577rkaf/9bbrkl70N8/7/927/lclf//S+55JIcirp06ZL+8z//s0rIu+eee/Kx6NixYw5tce7NnTs3FRGfH7/917/+9bzfEQgrn8ux79///vcryrT33nunv/zlL1U+I1rs4rxaY4010qBBg9K8efMKlQloWQQLgP8T3V8iDPziF79IH3zwQaHPeuKJJ9KHH36Ynn766Vyhjm5FcQX/a1/7Wnr++edzRfMHP/jBUt8TwePMM89ML730UurXr186+OCD0yeffFJRMYzK4HbbbZdefPHFHARmzJiRK7aVRSW6ffv26dlnn00333xzjeX7+c9/nq6++ur0s5/9LP31r3/NAeSQQw5Jb731Vl4fLRBbbLFFLks8//GPf1yr/Y9ybrPNNunee++tWNa6det0/fXXpylTpuQyxjGKloEQYSrCQ1R44/u+6juj0h77HWU/8MAD0zHHHJM+/fTTvO7dd99NRx55ZK7cR8U5jvN55523QuUeOXJkOvroo3O3rvgbr6t7++230913350efPDB/BvEbxUhqbLoOvb666/nwHTnnXfm4xBlDrFv8dknnnhixTaHH354KpVKqYg4thGoomzRfe3222+vEnj/9V//Nc2cOTMHvgiNEQL32WefiuMW74vgFP8H4vyKgHLjjTcWKhPQwpQAKA0cOLB06KGH5uc77bRT6cQTT8zP77vvvqjtVWx30UUXlbbZZpsq77322mtL66+/fpXPiteLFy+uWLbpppuWdtttt4rXixYtKnXq1Kl055135tfvvvtu/p4rr7yyYpuFCxeWevfuXbrqqqvy68suu6y0//77V/nuadOm5fdNnTo1v95jjz1K22233Vfu7zrrrFO64oorqiz79re/XfrhD39Y8Tr2M/Z3RY9bdUcddVRp8803X+Z7x4wZU+rRo0fF61GjRpW6du261HZxLOMYl8X+nn/++RWvv/jii7zs4Ycfzq/POeec0pZbblnlM84777y8zWeffbbM8syaNavUsWPH0ssvv5xfv/TSS6XOnTuX5syZU7FNHI82bdqUPvjgg4pl8b2tW7cuffTRRxXHpHv37qW5c+dWbHPTTTflz4pzYvLkybksf//730sr4sknn1xm2Ssfm9NOO6209957l5YsWbLUdn/84x9LXbp0Kc2bN6/K8o022qh0yy235Of9+vWr8vuHHXfccanzHWBZtFgAVBPjLOKKelxNXllxtT+u0JdF95Lo+lK5dSS6wMQV5MqilaKsbdu2aYcddqgoR1x9f/LJJ3M3qPJjs802qxgPUda3b9/lli26+ERryi677FJlebwuss/VRQaoPPD98ccfz1fIo8tUdLWJblzRGvPll1/W+rO33nrriufRtSpaOsrHMq7Wf/vb366y/Xe+852v/MxoWdhoo41yS0uILk/Rneh3v/tdle3WW2+9vA+Vf7PoWhbfWxafUXlcSGwT3b6mTZuW18VxiPMhWhF+9atf1cm4nuiCFbOKbbrppulHP/pReuyxxyrWxbkT3x/nXOXzJ1p3yudO/PY77rjjMs9HgK8iWABUs/vuu+euQcOGDVtqXYSF6l1WFi5cuNR20ZWmsvKsSdWX1WbmpKgYRteoqDxWfkT3pShz5Yp2YxAV1Q033DA/j4Hd0RUsAsHvf//73BXnhhtuWOkB5kWPZU2i21N004pAV3689tprdT6IO0LluHHjcpekPn365K53EQaikl+TCE2h8jiOsuge17Vr1/w8ujbFZ1x22WV5nEh0FYsuYeVzJ7o2VT93IgxF9zuAuiBYANQgBrFGH/qJEydWWR4DX6dPn14lXNTlvScmTZpU8TwGe0cFfPPNN6+oOEbFN/rNb7zxxlUetQkTUVFdZ5118hiMyuJ1VHTrQoyfeOWVV9IRRxyRX8d+RMU/xnXEvTG+9a1v5VaTymJcyOLFiwt/d1TSY4xA9SlrlyfKGu+J8Q6VK97xOs6BGFRf9v7771cpe/xmETjjeyu3EETlvvI20UIQA77LQShaiGLcRYzRiH2/7777aixbDEKPz49jWNk777yTw0Ycy8q/7VFHHZVbQaKlJUJcjKGIcyfO2whL1c+dGOQf4jyL8T/LOh8Bvkrbr9wCoAWKbioxIDgGxFYWsy59/PHHacSIEflqcAzejSvP5avKRcVV/KhIRiXv2muvzV1kYpBvGDx4cK4wxsDfGPQcs0vFQOK77rorz5IUV8JXVFyljgHl0fUnuvzEDFVRkY4Bv7U1f/78XGmNUBCDyeOYxGxE0UJx3HHH5W2iAhstO3F1PlpdahpYHoEprqzHwOdyV6KVmWY2BmvHgPlzzjknz2wU+1WenWpZ9ySJ1oroLlW55acsulXF+vJ9LWLGpYEDB+aB79GtLLodRetAzIxVFq0w8d3nn39+bq2JYx0zNkVAiMp77OP++++fevbsmV/HOVUOkNVFt7GYzSkG0kcwiHMzulTF/kVIi4HvIfY5WiVicH98z5gxY3KZYlaymHUqujXFgPY4d8vB7qGHHsqza0WXu5giOLpTxfMIPXEuRJD95je/WevfAGiZtFgALENMOVq9e01U/mKmnAgAUfl94YUXaj1j0le1lMQjPvuZZ57Js/yUryiXWxmiAh+V0qhgxrSyUXGsPJ5jRURleOjQobmyGp8TYaA8RWttxXujQhvBIO5pEeNAIpDFlLPlsBP7ExXfGL8S0+hGpbX6tL5RQY7ZsuKKe7QMRQV4ZUT3q5jONWZiiq5XN910U8WsUDE1bnURAn77299WtK5UF8t/85vfVHR5i5AUszjFbFTxO8R3VJ89KcZQxLGMoBL7EzNulafPjRAas4XF+6OCH+EjWnJiGuFliVm8IsxEmIjxOxEA4nujVa0cliKAxDGLYBBhKALN//zP/+RzI7aJ51GemNY3vvd73/teeu+99/L4nxDlvOCCC3JojXE6se6UU05Zqd8AaJlaxQjuhi4EANSnK664IreQxJX+IiIcxN3Yl9f9LSr9MfYhtgNoSXSFAqDZiRaEuGofsyBFK090Y4quSADUH8ECgGYnZsq6/PLL88DlmB42unzVNMsXAHVHVygAAKAwg7cBAIDCBAsAAKAwwQIAAChMsAAAAAoTLAAAgMIECwAAoDDBAgAAKEywAAAAChMsAACAVNT/Bw5Cu6rpDFSsAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 800x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8, 5))\n",
    "\n",
    "\n",
    "sns.countplot(x='Total_Apps_Used', hue='Total_Apps_Used', data=data, palette='viridis', legend=False)\n",
    "\n",
    "plt.title('Distribution of Dating App Usage')\n",
    "plt.xlabel('Number of Dating Apps Used')\n",
    "plt.ylabel('Number of Users')\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "167a2679-c093-4ef5-af75-48eeebd16dfa",
   "metadata": {},
   "outputs": [],
   "source": [
    "#yes most of the people use multiple dating apps\n",
    "#few of them use different dating apps"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "288ae6b8-e41d-424c-bb6e-37d9682d4243",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "User_ID                     int64\n",
      "Age                         int64\n",
      "Gender                     object\n",
      "Location                   object\n",
      "Education                  object\n",
      "Occupation                 object\n",
      "Primary_App                object\n",
      "Secondary_Apps             object\n",
      "Usage_Frequency            object\n",
      "Daily_Usage_Time           object\n",
      "Reason_for_Using           object\n",
      "Satisfaction                int64\n",
      "Challenges                 object\n",
      "Desired_Features           object\n",
      "Preferred_Communication    object\n",
      "Partner_Priorities         object\n",
      "dtype: object\n",
      "               User_ID       Age  Satisfaction\n",
      "User_ID       1.000000  0.075403     -0.029616\n",
      "Age           0.075403  1.000000     -0.018858\n",
      "Satisfaction -0.029616 -0.018858      1.000000\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# Load the dataset\n",
    "data = pd.read_csv('GenZ_DatingApp_Data.csv')\n",
    "\n",
    "# Display data columns to identify numerical variables\n",
    "print(data.dtypes)\n",
    "\n",
    "# Select only numerical columns\n",
    "numerical_data = data.select_dtypes(include=['int64', 'float64'])\n",
    "\n",
    "# Calculate the correlation matrix\n",
    "correlation_matrix = numerical_data.corr()\n",
    "\n",
    "# Display the correlation matrix\n",
    "print(correlation_matrix)\n",
    "\n",
    "# Visualize the correlation matrix using a heatmap\n",
    "plt.figure(figsize=(10, 6))\n",
    "sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', linewidths=0.5, fmt=\".2f\")\n",
    "plt.title('Correlation Matrix Heatmap')\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "ccd14abc-88b6-4694-9943-df6cf326aa6f",
   "metadata": {},
   "outputs": [],
   "source": [
    "Date = pd.read_csv('cleaned_data.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "a948fb09-f618-4cf0-ab01-c35737ba5632",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/3n/5_w7plqd0f1_bnxr3l6cpcq80000gn/T/ipykernel_49501/602137555.py:1: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  Date['Daily_Usage_Time_Hours'] = Date['Daily_Usage_Time'].replace({\n",
      "/var/folders/3n/5_w7plqd0f1_bnxr3l6cpcq80000gn/T/ipykernel_49501/602137555.py:6: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.\n",
      "  Date.groupby(pd.cut(Date['Age'], [18, 22, 26, 30, 35, 40]))['Daily_Usage_Time_Hours'].mean()\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Age\n",
       "(18, 22]    1.588843\n",
       "(22, 26]    1.689055\n",
       "(26, 30]         NaN\n",
       "(30, 35]         NaN\n",
       "(35, 40]         NaN\n",
       "Name: Daily_Usage_Time_Hours, dtype: float64"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "Date['Daily_Usage_Time_Hours'] = Date['Daily_Usage_Time'].replace({\n",
    "    '30 minutes' : 0.5, '1 hour' : 1, '1.5 hours' : 1.5, '2 hours' : 2, '3 hours' : 3\n",
    "})\n",
    "\n",
    "\n",
    "Date.groupby(pd.cut(Date['Age'], [18, 22, 26, 30, 35, 40]))['Daily_Usage_Time_Hours'].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "f1c66b2a-4962-47da-83bd-76c5e39bb6a4",
   "metadata": {},
   "outputs": [],
   "source": [
    "pivot_table = Date.pivot_table(\n",
    "    values='Daily_Usage_Time_Hours',\n",
    "    index=['Gender', 'Location'],\n",
    "    columns=pd.cut(Date['Age'], bins=[18, 22, 26, 30, 35, 40]),\n",
    "    aggfunc='mean',\n",
    "    observed = False\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "770350f0-3ef8-4ebd-a527-985e1ee7b123",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>(18, 22]</th>\n",
       "      <th>(22, 26]</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Gender</th>\n",
       "      <th>Location</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"7\" valign=\"top\">Female</th>\n",
       "      <th>Bangalore</th>\n",
       "      <td>1.611111</td>\n",
       "      <td>2.200000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chennai</th>\n",
       "      <td>1.281250</td>\n",
       "      <td>1.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Delhi</th>\n",
       "      <td>1.888889</td>\n",
       "      <td>1.684211</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Hyderabad</th>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.833333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Kolkata</th>\n",
       "      <td>1.500000</td>\n",
       "      <td>2.100000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mumbai</th>\n",
       "      <td>1.730769</td>\n",
       "      <td>1.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Pune</th>\n",
       "      <td>1.633333</td>\n",
       "      <td>1.681818</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"7\" valign=\"top\">Male</th>\n",
       "      <th>Bangalore</th>\n",
       "      <td>1.558824</td>\n",
       "      <td>1.583333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chennai</th>\n",
       "      <td>1.388889</td>\n",
       "      <td>1.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Delhi</th>\n",
       "      <td>1.611111</td>\n",
       "      <td>1.583333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Hyderabad</th>\n",
       "      <td>1.700000</td>\n",
       "      <td>1.833333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Kolkata</th>\n",
       "      <td>1.423077</td>\n",
       "      <td>1.909091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mumbai</th>\n",
       "      <td>1.750000</td>\n",
       "      <td>1.642857</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Pune</th>\n",
       "      <td>1.666667</td>\n",
       "      <td>1.666667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"7\" valign=\"top\">Non-binary</th>\n",
       "      <th>Bangalore</th>\n",
       "      <td>1.550000</td>\n",
       "      <td>1.200000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chennai</th>\n",
       "      <td>1.821429</td>\n",
       "      <td>1.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Delhi</th>\n",
       "      <td>1.285714</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Hyderabad</th>\n",
       "      <td>1.666667</td>\n",
       "      <td>2.055556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Kolkata</th>\n",
       "      <td>1.178571</td>\n",
       "      <td>1.166667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mumbai</th>\n",
       "      <td>1.727273</td>\n",
       "      <td>1.416667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Pune</th>\n",
       "      <td>1.555556</td>\n",
       "      <td>1.812500</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Age                   (18, 22]  (22, 26]\n",
       "Gender     Location                     \n",
       "Female     Bangalore  1.611111  2.200000\n",
       "           Chennai    1.281250  1.500000\n",
       "           Delhi      1.888889  1.684211\n",
       "           Hyderabad  2.000000  1.833333\n",
       "           Kolkata    1.500000  2.100000\n",
       "           Mumbai     1.730769  1.500000\n",
       "           Pune       1.633333  1.681818\n",
       "Male       Bangalore  1.558824  1.583333\n",
       "           Chennai    1.388889  1.500000\n",
       "           Delhi      1.611111  1.583333\n",
       "           Hyderabad  1.700000  1.833333\n",
       "           Kolkata    1.423077  1.909091\n",
       "           Mumbai     1.750000  1.642857\n",
       "           Pune       1.666667  1.666667\n",
       "Non-binary Bangalore  1.550000  1.200000\n",
       "           Chennai    1.821429  1.500000\n",
       "           Delhi      1.285714  2.000000\n",
       "           Hyderabad  1.666667  2.055556\n",
       "           Kolkata    1.178571  1.166667\n",
       "           Mumbai     1.727273  1.416667\n",
       "           Pune       1.555556  1.812500"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pivot_table"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "7f32f9b6-c0dd-4079-b06c-ef3635361ab3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "\n",
    "data = pd.read_csv(\"GenZ_DatingApp_Data.csv\")\n",
    "\n",
    "\n",
    "data['Gender'] = data['Gender'].astype(str).str.lower().str.strip()\n",
    "data['Primary_App'] = data['Primary_App'].astype(str).str.lower().str.strip()\n",
    "\n",
    "\n",
    "app_usage_by_gender = data.groupby(['Gender', 'Primary_App']).size().unstack(fill_value=0)\n",
    "\n",
    "\n",
    "app_usage_by_gender.plot(kind='bar', stacked=True, figsize=(10, 6), colormap='viridis')\n",
    "\n",
    "\n",
    "plt.title('Dating App Usage by Gender')\n",
    "plt.xlabel('Gender')\n",
    "plt.ylabel('Number of Users')\n",
    "plt.legend(title='Primary App', bbox_to_anchor=(1.05, 1), loc='upper left')\n",
    "plt.tight_layout()\n",
    "\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6b9b477f-0021-4c68-8982-78a7f98e2828",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.11"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
